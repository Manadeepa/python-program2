{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Original numbers in the list1:  [12, -7, 5, 64, -14]\n",
      "Positive numbers in the list:  [12, 5, 64]\n"
     ]
    }
   ],
   "source": [
    "#print all positive numbers in a list\n",
    "nums1=[12,-7,5,64,-14]\n",
    "print(\"Original numbers in the list1: \",nums1)\n",
    "new_nums1=list(filter(lambda x: x > 0,nums1))\n",
    "print(\"Positive numbers in the list: \",new_nums1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Original numbers in the list:  [12, 14, -95, 3]\n",
      "Positive numbers in the list: [12, 14, 3]\n"
     ]
    }
   ],
   "source": [
    "nums2=[12,14,-95,3]\n",
    "print(\"Original numbers in the list: \",nums2)\n",
    "new_nums2=list(filter(lambda x: x > 0,nums2))\n",
    "print(\"Positive numbers in the list:\",new_nums2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "enter how many numbers you want in this series:15\n",
      "0\n",
      "1\n",
      "1\n",
      "2\n",
      "3\n",
      "5\n",
      "8\n",
      "13\n",
      "21\n",
      "34\n",
      "55\n",
      "89\n",
      "144\n",
      "233\n",
      "377\n"
     ]
    }
   ],
   "source": [
    "#fibonacci numbers\n",
    "n=int(input(\"enter how many numbers you want in this series:\"))\n",
    "first=0\n",
    "second=1\n",
    "for i in range (n):\n",
    "    print(first)\n",
    "    temp=first\n",
    "    first=second\n",
    "    second=temp+second"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
